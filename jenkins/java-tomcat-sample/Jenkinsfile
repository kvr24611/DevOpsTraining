pipeline {
  agent any
  stages {
    stage("BuildApplication") {
      steps {
        echo "Building the project..."
        sh 'mvn -f . clean package'
        archiveArtifacts artifacts: '**/*.war', followSymlinks: false
      }
    }

    stage("CreateTomcatImage") {
      steps {
        echo "Testing the project...123"
        copyArtifacts filter: '**/*.war', fingerprintArtifacts: true, projectName: env.JOB_NAME, selector: lastSuccessful()
        sh '''
			  original_pwd=$(pwd -P)
			  cd .
			  docker image build -t localtomcat:$BUILD_NUMBER
			  cd $original_pwd
		    sh '''
      }
    }

    stage("RunQAContainer") {
      steps {
        echo "Deploying the project to QA server..."
        sh '''
        docker container stop tomcat_container_local || true
        docker container rm tomcat_container_local || true
        docker container run -dit --name tomcat_container_qa -p 8084:8080 localtomcat:$BUILD_NUMBER
        sh '''
      }
    }

    stage("RunStagingContainer") {
      steps {
        timeout(time:1, unit:'MINUTES') {
          input message: 'Approve the staging deployment.'
        }
        echo "Deploying the project to Staging server..."
        sh '''
        docker container stop tomcat_container_local || true
        docker container rm tomcat_container_local || true
        docker container run -dit --name tomcat_container_staging -p 8085:8080 localtomcat:$BUILD_NUMBER
        sh '''
      }
    }
  }
}

